// Grammar for the
//
//    mm
//    ##    mmm    mmm
//   #  #  "   #  "   #
//   #mm#  m"""#  m"""#
//  #    # "mm"#  "mm"#
//
// language.

// --- control flow tokens ---

@ token BEGIN = "begin" .
@ token ELSE  = "else"  .
@ token END   = "end"   .
@ token FN    = "fn"    .
@ token IF    = "if"    .
@ token WHILE = "while" .

// --- literal tokens ---

@ token FALSE      = "false"                                  .
@ token IDENTIFIER = regex("[a-z_]+")                         .
@ token INTEGER    = regex("[0-9]+")                          .
@ token STRING     = regex("\"([^\\\\]|\\\\(\"|n|\\\\))*?\"") .
@ token TRUE       = "true"                                   .

// --- operator tokens ---

@ token AND            = "and"    .
@ token ASTERISK       = "*"      .
@ token BACKSLASH_N    = "\\n"    .
@ token DROP           = "drop"   .
@ token DUP            = "dup"    .
@ token EQUALS         = "="      .
@ token GREATER_EQUALS = ">="     .
@ token GREATER_THAN   = ">"      .
@ token LESS_EQUALS    = "<="     .
@ token LESS_THAN      = "<"      .
@ token MINUS          = "-"      .
@ token NOP            = "nop"    .
@ token NOT            = "not"    .
@ token NOT_EQUALS     = "!="     .
@ token OR             = "or"     .
@ token OVER           = "over"   .
@ token PERCENT        = "%"      .
@ token PERIOD         = "."      .
@ token PLUS           = "+"      .
@ token ROT            = "rot"    .
@ token SLASH          = "/"      .
@ token STRLEN         = "strlen" .
@ token SUBSTR         = "substr" .
@ token SWAP           = "swap"   .

// --- pruned tokens ---

@ token
@ prune
WHITESPACE = regex("([ \n]|$)+") .

// ---

BOOLEAN = TRUE | FALSE .

BRANCH = IF FUNCTION_BODY BEGIN FUNCTION_BODY (ELSE FUNCTION_BODY)? END .

ROOT = (FUNCTION_DEFINITION)* .

FUNCTION_BODY = (FUNCTION_BODY_ITEM)+ .

@ prune
FUNCTION_BODY_ITEM = BRANCH | LOOP | OPERATOR | IDENTIFIER | LITERAL .

FUNCTION_DEFINITION = FN FUNCTION_NAME FUNCTION_ARGS BEGIN FUNCTION_BODY END .

FUNCTION_NAME = IDENTIFIER .

FUNCTION_ARGS = (IDENTIFIER)* .

@ prune
LITERAL = BOOLEAN | INTEGER | STRING .

LOOP = WHILE FUNCTION_BODY BEGIN FUNCTION_BODY END .

@ prune
OPERATOR = (
      AND
    | ASTERISK
    | BACKSLASH_N
    | DROP
    | DUP
    | EQUALS
    | GREATER_EQUALS
    | GREATER_THAN
    | LESS_EQUALS
    | LESS_THAN
    | MINUS
    | NOP
    | NOT
    | NOT_EQUALS
    | OR
    | OVER
    | PERCENT
    | PERIOD
    | PLUS
    | ROT
    | SLASH
    | STRLEN
    | SUBSTR
    | SWAP
) .
