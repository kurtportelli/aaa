
// stack operations
builtin_fn "drop" args *a
builtin_fn "dup" args *a return *a, *a
builtin_fn "swap" args *a, *b return *b, *a
builtin_fn "over" args *a, *b return *a, *b, *a
builtin_fn "rot" args *a, *b, *c return *b, *c, *a

// special operators
builtin_fn "." args *a
builtin_fn "assert" args bool
builtin_fn "nop"

// integer arithmetic
builtin_fn "+" args int, int return int
builtin_fn "-" args int, int return int
builtin_fn "*" args int, int return int
builtin_fn "/" args int, int return int
builtin_fn "%" args int, int return int

// integer comparison
builtin_fn "!=" args int, int return bool
builtin_fn "=" args int, int return bool
builtin_fn ">" args int, int return bool
builtin_fn ">=" args int, int return bool
builtin_fn "<" args int, int return bool
builtin_fn "<=" args int, int return bool

// boolean operators
builtin_fn "and" args bool, bool return bool
builtin_fn "or" args bool, bool return bool
builtin_fn "not" args bool return bool

// string comparison
builtin_fn "=" args str, str return bool

// string operators
builtin_fn "+" args str, str return str
builtin_fn "substr" args str, int, int, return str
builtin_fn "strlen" args str return int

// TODO
// builtin_fn "vec:push" args vec[*a], *a return vec[*a]
